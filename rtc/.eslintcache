[{"/home/nano/rtc/src/index.js":"1","/home/nano/rtc/src/App.js":"2","/home/nano/rtc/src/reportWebVitals.js":"3","/home/nano/rtc/src/modules/media/index.js":"4","/home/nano/rtc/src/modules/media/components/OwnMedia.js":"5","/home/nano/WebRTC-samples/rtc/src/index.js":"6","/home/nano/WebRTC-samples/rtc/src/App.js":"7","/home/nano/WebRTC-samples/rtc/src/reportWebVitals.js":"8","/home/nano/WebRTC-samples/rtc/src/modules/media/index.js":"9","/home/nano/WebRTC-samples/rtc/src/modules/media/components/OwnMedia.js":"10"},{"size":500,"mtime":1610526996980,"results":"11","hashOfConfig":"12"},{"size":233,"mtime":1610598681588,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610526996980,"results":"14","hashOfConfig":"12"},{"size":82,"mtime":1610593280321,"results":"15","hashOfConfig":"12"},{"size":5590,"mtime":1610702136030,"results":"16","hashOfConfig":"12"},{"size":500,"mtime":1610758793102,"results":"17","hashOfConfig":"18"},{"size":233,"mtime":1610758793098,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610758793102,"results":"20","hashOfConfig":"18"},{"size":82,"mtime":1610758793102,"results":"21","hashOfConfig":"18"},{"size":5590,"mtime":1610758793102,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"u35s56",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qkseln",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nano/rtc/src/index.js",[],["46","47"],"/home/nano/rtc/src/App.js",[],"/home/nano/rtc/src/reportWebVitals.js",[],"/home/nano/rtc/src/modules/media/index.js",["48"],"'use strict';\n\nimport OwnMedia from './components/OwnMedia';\n\nexport { OwnMedia };","/home/nano/rtc/src/modules/media/components/OwnMedia.js",["49","50"],"import React, { useEffect, useState, useRef } from 'react';\nimport './OwnMedia.css';\nimport \"antd/dist/antd.css\";\nimport { Cascader } from 'antd';\n\nfunction OwnMedia() {\n  const userVideo = useRef();\n\n  const [audioSources, setAudioSources] = useState([]);\n  const [audioOutputs, setAudioOutputs] = useState([]);\n  const [videoSources, setVideoSources] = useState([]);\n\n  const [currentAudioSource, setCurrentAudioSource] = useState('');\n  const [currentAudioOutput, setCurrentAudioOutput] = useState('');\n  const [currentVideoSource, setCurrentVideo] = useState('');\n\n  let UserVideo;\n\n  UserVideo = (<video ref={userVideo} playsInline muted autoPlay />);\n\n  function gotDevices(deviceInfos) {\n    // Handles being called several times to update labels. Preserve values.\n\n    let temp_audioSources = [];\n    let temp_audioOutputs = [];\n    let temp_videoSources = [];\n\n    for (let i = 0; i !== deviceInfos.length; ++i) {\n      const deviceInfo = deviceInfos[i];\n      let option = {};\n      option.value = deviceInfo.deviceId;\n      if (deviceInfo.kind === 'audioinput') {\n        option.label = deviceInfo.label || `microphone ${temp_audioSources.length + 1}`;\n        temp_audioSources.push(option);\n      } else if (deviceInfo.kind === 'audiooutput') {\n        option.label= deviceInfo.label || `speaker ${temp_audioOutputs.length + 1}`;\n        temp_audioOutputs.push(option);\n      } else if (deviceInfo.kind === 'videoinput') {\n        option.label = deviceInfo.label || `camera ${temp_videoSources.length + 1}`;\n        temp_videoSources.push(option);\n      } else {\n        console.log('Some other kind of source/device: ', deviceInfo);\n      }\n    }\n\n    setAudioSources(temp_audioSources);\n    setAudioOutputs(temp_audioOutputs);\n    setVideoSources(temp_videoSources);\n  }\n\n  function attachSinkId(element, sinkId) {\n    if (typeof element.sinkId !== 'undefined') {\n      element.setSinkId(sinkId)\n          .then(() => {\n            console.log(`Success, audio output device attached: ${sinkId}`);\n          })\n          .catch(error => {\n            let errorMessage = error;\n            if (error.name === 'SecurityError') {\n              errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;\n            }\n            console.error(errorMessage);\n            // Jump back to first output device in the list as it's the default.\n            //audioOutput.current.selectedIndex = 0;\n          });\n    } else {\n      console.warn('Browser does not support output device selection.');\n    }\n  }\n\n  function gotStream(stream) {\n    window.stream = stream; // make stream available to console\n    if(userVideo.current)\n      userVideo.current.srcObject = stream;\n    // Refresh button list in case labels have become available\n    return navigator.mediaDevices.enumerateDevices();\n  }\n\n  function handleError(error) {\n    console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\n  }\n\n  function audioOutputChange(value, selectedOptions) {\n    setCurrentAudioOutput(value);\n    attachSinkId(userVideo.current, value);\n  }\n\n  function audioSourceChange(value, selectedOptions) {\n    if (window.stream) {\n      window.stream.getTracks().forEach(track => {\n        track.stop();\n      });\n    }\n\n    setCurrentAudioSource(value);\n    const audioSo = value;\n    const videoSo = currentVideoSource;\n    const constraints = {\n      audio: {deviceId: audioSo ? {exact: audioSo} : undefined},\n      video: {deviceId: videoSo ? {exact: videoSo} : undefined}\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(gotStream).then(gotDevices).catch(handleError);\n  }\n\n  function videoSourceChange(value, selectedOptions) {\n    if (window.stream) {\n      window.stream.getTracks().forEach(track => {\n        track.stop();\n      });\n    }\n\n    setCurrentVideo(value);\n    const audioSo = currentAudioSource;\n    const videoSo = value;\n    const constraints = {\n      audio: {deviceId: audioSo ? {exact: audioSo} : undefined},\n      video: {deviceId: videoSo ? {exact: videoSo} : undefined}\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(gotStream).then(gotDevices).catch(handleError);\n  }\n\n  function start() {\n    if (window.stream) {\n      window.stream.getTracks().forEach(track => {\n        track.stop();\n      });\n    }\n    const audioSo = currentAudioSource;\n    const videoSo = currentVideoSource;\n    const constraints = {\n      audio: {deviceId: audioSo ? {exact: audioSo} : undefined},\n      video: {deviceId: videoSo ? {exact: videoSo} : undefined}\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(gotStream).then(gotDevices).catch(handleError);\n  }\n\n  useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleError);\n\n    start();\n  }, []);\n\n  return (\n    <>\n      <div className=\"videoContent\">\n        {UserVideo}\n      </div>\n      <div>\n        <div>\n          <label>Audio Input Source: </label>\n          { audioSources.length !== 0 ? <Cascader options={audioSources} onChange={audioSourceChange} placeholder=\"Please select\"/> : null}\n        </div>\n        <div>\n          <label>Audio Output Destination: </label>\n          { audioOutputs.length !== 0 ? <Cascader options={audioOutputs} onChange={audioOutputChange} placeholder=\"Please select\"/> : null}\n        </div>\n        <div>\n          <label> Video Source: </label>\n          { videoSources.length !== 0 ? <Cascader options={videoSources} onChange={videoSourceChange} placeholder=\"Please select\"/> : null}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default OwnMedia;","/home/nano/WebRTC-samples/rtc/src/index.js",[],"/home/nano/WebRTC-samples/rtc/src/App.js",[],"/home/nano/WebRTC-samples/rtc/src/reportWebVitals.js",[],"/home/nano/WebRTC-samples/rtc/src/modules/media/index.js",["51"],"/home/nano/WebRTC-samples/rtc/src/modules/media/components/OwnMedia.js",["52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":1,"nodeType":"60","messageId":"61","endLine":1,"endColumn":14,"fix":"62"},{"ruleId":"63","severity":1,"message":"64","line":14,"column":10,"nodeType":"65","messageId":"66","endLine":14,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":141,"column":6,"nodeType":"69","endLine":141,"endColumn":8,"suggestions":"70"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":1,"nodeType":"60","messageId":"61","endLine":1,"endColumn":14,"fix":"71"},{"ruleId":"63","severity":1,"message":"64","line":14,"column":10,"nodeType":"65","messageId":"66","endLine":14,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":141,"column":6,"nodeType":"69","endLine":141,"endColumn":8,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"75","text":"76"},"no-unused-vars","'currentAudioOutput' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'start'. Either include it or remove the dependency array.","ArrayExpression",["77"],{"range":"78","text":"76"},["79"],"no-global-assign","no-unsafe-negation",[0,13],"",{"desc":"80","fix":"81"},[0,13],{"desc":"80","fix":"82"},"Update the dependencies array to be: [start]",{"range":"83","text":"84"},{"range":"85","text":"84"},[4785,4787],"[start]",[4785,4787]]